akka {
  loglevel = INFO

  actor {
    provider = cluster
    serialization-bindings {
      "io.github.jdfoster.blender.helpers.EventSerializeMarker" = jackson-json
      "io.github.jdfoster.blender.helpers.MsgSerializeMarker" = jackson-json
    }
  }

  remote {
    artery {
      enabled = on
      transport = tcp
      canonical.hostname = ${clustering.ip}
      canonical.port = ${clustering.port}
    }
  }

  cluster {
    roles = ["sharded"]
    sharding {
      number-of-shards = 30
      passivate-idle-entity-after = 2 minutes
      role = "sharded"
    }

    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"

    split-brain-resolver.active-strategy = keep-majority

    split-brain-resolver.keep-majority {
      role = "sharded"
    }

    seed-nodes = [
      "akka://"${clustering.cluster.name}"@"${clustering.seed-ip}":"${clustering.seed-port}
    ]
  }

  coordinated-shutdown.terminate-actor-system = on
}

clustering {
  cluster.name = ArtifactStateCluster

  ip = "127.0.0.1"
  port = 2552
  defaultPort = ${clustering.port}
  seed-ip = "127.0.0.1"
  seed-port = 2552
}
